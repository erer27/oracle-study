-- 2025-01-02 오라클 1일차 => 개론
/*
	43page
	파일 시스템 / DBMS 비교
	----------------------------
	 발전과정
	 ----------
	   파일시스템 => 데이터베이스 시스템 => 웹 데이터베이스 시스템  
	  (csv, json, xml)				     => 분산 데이터베이스 시스템
	   => API 						  ------------------------------
								  | MSA
								  | 행정 자치부 => 데이터 통합
	 bit ====> byte =====> word ====> record =====> table 
	----------------------------------------------------------
	 구분				파일시스템		DBMS
	----------------------------------------------------------
	 데이터정의		   파일		table (파일)
				      1|영화명..		=> ~ FROM table명
					.txt			    --------------------
	-----------------------------------------------------------
	저장위치			파일			데이터베이스 => dbfile (이미지)
	-----------------------------------------------------------
	접근방식			응용프로그램	   SQL => 응용프로그램에서도 
					프로그램 언어			SQL을 네트워크를 이용해서 접근이 가능:jdbc
					(java, c, c++, c#, 파이썬)
					=> io api를 제공
	-----------------------------------------------------------
		*** 웹 개발
		     HTML/CSS/JavaScript => 브라우저에서 화면 UI와 관련
		     =====> 오라클 연결이 불가능 (제외: NodeJS)
				   --------------
				    프로그램언어 : 오라클 연동 = 브라우저 연동
				   -------------- java(spring)/c#(asp.net)/python(django)
						    -------------		     -------------------
							  |					|
							 ----------------------------------
			브라우저 ========> 자바 ============> 오라클
				   <========= 자바 <=========== 오라클
			------------------------------------------------------------------
		----------------------------------------------------------------------------
		CPU/주기억장치		적음					ROM에 저장
						보조기억장치(RAM)		 사용빈도
						java.io				 SQL => java.sql
		----------------------------------------------------------------------------

		** DBMS의 장점
		  => 데이터 중복의 최소화 : 정규화
			1 => 데이터의 원자성
				취미
				  => 등산,낚시,여행 ..... => 따로 저장
			2 => 중복된 데이터를 없앤다
			3. => 매핑테이블
		  => 테이블간의 관계도 => ERD
		 => 일관성 : 테이블안에는 관련된 데이터만 저장해서 사용
					뮤직 / 영화
		=> 독립성 / 관리기능을 제공 / 프로그램 개발시 용이
			
		회원 저장 => 좋아요/찜하기 추가
		회원 === 좋아요 == 찜하기
		--------------------------------- JOIN
		*** 실무 : 테이블은 이미 설계된 상태
			    => 간단한 테이블은 제작 
		--------------------------------------------------
		45page => 데이터베이스 시스템의 구성
								**(Front/Back)
		   사용자 : 일반사용자 			응용프로그래머		 SQL사용자 			DBA
				    |					|				|				  |
				응용프로그램화면	응용프로그램 개발	  SQL을 잘하는 개발자		설계
												잘하는 개발자
				(브라우저/윈도우)	(JDBC/HTML)
									|				|				   |
									----------------------------				DDL/DCL
											|
										DQL/DML
			데이터베이스 : 데이터파일 / 인덱스 / 데이터통계 / 데이터사전
					     --> 구조 확인 DESC / tabs
*/
DESC emp;
/*
	46page
	데이터베이스 언어 (*********)
	=> SQL (구조화된 질의 언어)
	     ------
	    DQL / DML / DDL / DCL / TCL
	    --------------			-----
			     --------------- DBA
	    SQL => 비절차적 언어
			정상 문장 1 ========> 실행 => 입고
			 비정상 문장 2 ======> 비실행 => 출고
			 정상 문장 3 =======> 실행 => 재고
			-------------------------------------- 트랜잭션 (일괄처리) TCL
	 DQL : 데이터 검색언어 => SELECT
	 DML : 데이터 조작언어 => INSERT / UPDATE / DELETE
	 DDL : 데이터 정의언어 => CREATE : 생성 (table, view, sequence, index function, procedure, trigger)
						ALTER : 변경 (수정, 추가, 삭제)
						DROP : 전체 삭제 
						TRUNCATE : 데이터만 자르기
						RENAME : 테이블명 / 컬럼명 변경
	DCL : 제어언어 => 일반 계정으로는 사용이 불가능 
				   system / sysdba
				   권한부여 : GRANT / 권한해제 : REVOKE
	TCL : 트랜잭션 제어언어
		정상 저장 : COMMIT
		취소 : ROLLBACK
	*** 오라클에서 저장 => COMMIT이 없는 경우에는 저장이 안됨
	*** 자바는 AutoCommit
	*** 형식 => 순서 => 응용
	    ---------------------------
	    => 오라클은 대소문자 구분이 없다 (실제 저장된 데이터는 대소문자 구분)
*/
-- select ename, job from emp where ename="KING"
/*
	47page ~ 48page 
	데이터베이스 사용자
		일반 사용자(user) =============> 언어 / SQL (X)
		응용프로그래머(웹 개발) ----------------> 언어 / SQL(약간) => 필요한 데이터 읽기/쓰기
		데이터베이스 관리자(DBA) --------------> 언어 (약간)/ SQL => admin => 백업 / 설계

	52page 데이터 모델
		   => 관계데이터 모델 (속성값을 이용)
	54page 데이터베이스 구조
		   1. 스키마 : 데이터베이스 구조와 제약조건에 해당되는
			전반적인 명세를 기술
*/
